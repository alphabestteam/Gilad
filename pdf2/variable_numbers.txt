Python - Advanced
Variable Number Of Parameters
1.  It is necessary to have an unlimited or undefined amount of parameters inside a function, because sometimes we will not know how many parameters will be passed to the function when it is used.
An example of a function that accepts an unknown number of parameters is the print function.
2.  The term *arg is a convention (only the "args" is a convention) for describing a parameter within a function.
This parameter represents the amount of parameters that should be accepted for the function, but their amount is unknown.
When the function receives this parameter it will contain a tuple that will contain all the values of the parameters passed to the function.
If we use **kwargs in the print function, a tuple containing the parameter values will be printed.
3.  The term **kwargs is a convention (only the "kwargs" is a convention) for describing a parameter within a function.
This parameter represents the amount of parameters that should be accepted for the function, but their amount is unknown.
When the function receives this parameter, it will contain a dictionary in which the key will have the name of the parameter, and the value will contain the value of the parameter.
If we use **kwargs in the print function, the dictionary containing the parameters and their values will be printed.
4.  The difference between *args and **kwargs is in the "*" and "**" operators. The names in the various operators can be written in reverse, and nothing (except the name of the 
parameter) will change in the functionality.












5.  The concept of Packing and Unpacking are methods for "packing" and "extracting" parameters.
The action Packing takes several parameters and turns them into a dictionary/tuple.
This is done by using the * / ** operators.
The Unpacking operation takes a dictionary/tuple and turns their values into variables.
This is done by using the * / ** operators.
6.  An example of using Unpacking:
def main():
        dict = {“name”: gilad, “age”: 19}
        print(**dict)


An example of using packing:
        def sum(**kwargs):
                print(kwargs)
        def main():
                print(sum({“value1”: 1, “value2”: 2})
        if (__name__ == “__main__”):
                main()